{"version":3,"sources":["Components/Header.js","redux/actions/auth_actions.js","redux/types.js","Components/CustomModal.js","Pages/Home.js","Pages/Dept.js","Pages/Course.js","Pages/Batch.js","Pages/Teacher.js","Pages/Student.js","Components/Main.js","Pages/Auth.js","App.js","Config/env.js","serviceWorker.js","redux/reducers/auth_reducer.js","redux/reducers/index.js","store.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","handleLogout","logout","setState","react_default","a","createElement","Navbar","color","light","expand","NavbarToggler","onClick","NavbarBrand","tag","Link","to","Collapse","navbar","Nav","className","NavItem","NavLink","Component","connect","type","CustomModal","Modal","ModalBody","Form","fields","map","each","FormGroup","key","fieldName","Label","for","placeholder","Input","name","onChange","handleInputChange","value","selectFields","eachSelect","id","data","_id","ModalFooter","Container","Row","Col","Alert","showEnterAllDataAlert","Button","block","onSubmit","showDeleteButton","onDelete","onCancel","initialState","courseId","batchName","showAddBatchModal","showEditBatchModal","notificationTitle","notificationText","showNotificationModal","departmentId","Home","e","defineProperty","target","fetchCourses","_this2","_this$state","sendData","title","description","axios","post","then","res","objectSpread","catch","err","console","log","_this3","get","concat","department","_this4","put","course","_this5","batchId","_this6","delete","_this7","length","style","marginTop","Components_CustomModal","addBatch","editBatch","deleteBatch","sendCollegeNotification","Fragment","textAlign","margin","courses","marginBottom","hasOwnProperty","sm","batches","batch","Card","CardBody","CardTitle","react_router_dom","textDecoration","deptId","departmentName","showAddDeptForm","showEditDeptForm","showAddCourseForm","showEditCourseForm","Department","departments","fetchDepartments","alert","filter","courseName","addDept","deleteDept","editDept","addCourse","index","openTab","size","outline","Table","courseIndex","padding","showAddSubjectForm","subjectName","subjectSemester","showEditSubjectForm","Course","fetchCourseDetails","match","params","semesterSubjectArray","subjects","forEach","semester","push","history","goBack","_this$state2","subjectId","_this8","editCourse","deleteCourse","addSubject","editSubject","deleteSubject","keys","studentName","mobile","mail","address","registerNumber","showAddStudentForm","Batch","batchData","students","fetchBatchDetailsAndStudents","currentState","addStudent","CardText","showAddTeacherForm","showEditTeacherForm","Teacher","teachers","getTeachers","teacherName","teacherEmail","teacherPassword","teacherDepartment","email","password","teacherId","toConsumableArray","addTeacher","editTeacher","teacher","Student","fetchStudentDetails","studentId","student","combineSubjectAndStudent","subjectData","semNumber","eachSubject","innerIndex","foundItem","firstInternal","secondInternal","attendacePercentage","editingSubjectId","attendancePercentage","editSubjectDetails","Main","react_router","path","exact","component","Dept","Auth","activeTab","tab","login","setTimeout","offset","handleLogin","userData","payload","defaults","baseURL","App","auth","Components_Header","Components_Main","withRouter","Boolean","window","location","hostname","roleId","combineReducers","arguments","undefined","action","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2a6ba2b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar, NavbarToggler, NavbarBrand, Collapse, Nav, NavItem, NavLink } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/actions'\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props)\n        this.toggle = this.toggle.bind(this)\n        this.state = { isOpen:false }\n        this.handleLogout = this.handleLogout.bind(this)\n    }\n\n    handleLogout() {\n        this.props.logout()\n    }\n\n    toggle() { this.setState({ isOpen:!this.state.isOpen }) }\n\n    render() {\n        return(\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarToggler onClick={this.toggle} />\n                    <NavbarBrand tag={Link} to=\"/\">College Dashboard</NavbarBrand>\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/\" >Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/dept\" >Departments</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/teacher\" >Teacher</NavLink>\n                            </NavItem>\n                            <NavItem onClick={this.handleLogout}>\n                                <NavLink>Logout</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { logout })(Header)","import { LOGIN, LOGOUT } from '../types'\n\nexport const login = (userData) => {\n    return {\n        type:LOGIN,\n        payload:userData\n    }\n}\n\nexport const logout = () => {\n    return {\n        type:LOGOUT\n    }\n}","export const LOGIN = 'login'\nexport const LOGOUT = 'logout'","import React from 'react'\nimport { Modal, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Container, Row, Col, Alert, Button } from 'reactstrap'\n\nconst CustomModal = (props) => {\n    return (\n        <Modal isOpen={props.isOpen}>\n            <ModalBody>\n                <Form>\n                    {\n                        props.fields.map(each => {\n                            return (\n                                <FormGroup key={each.fieldName}>\n                                    <Label for={each.fieldName}>Enter {each.placeholder}</Label>\n                                    <Input type={each.type || \"text\"} name={each.fieldName} onChange={props.handleInputChange} value={each.value || ''} />\n                                </FormGroup>\n                            )\n                        })\n                    }\n                    {\n                        props.selectFields && props.selectFields.map(eachSelect => {\n                            return (\n                                <FormGroup key={eachSelect.fieldName}>\n                                    <Label for={eachSelect.fieldName}>Select</Label>\n                                    <Input value={eachSelect.value} type=\"select\" name={eachSelect.fieldName} id={eachSelect.fieldName} onChange={props.handleInputChange}>\n                                        {\n                                            eachSelect.data.map((each) => {\n                                                return (<option key={each._id} value={each._id}>{each.name}</option>)\n                                            })\n                                        }\n                                    </Input>\n                                </FormGroup>\n                            )\n                        })\n\n                    }\n                </Form>\n            </ModalBody>\n            <ModalFooter>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Alert isOpen={props.showEnterAllDataAlert} color=\"danger\">Enter all data before submitting</Alert>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Button color=\"primary\" block onClick={props.onSubmit}>Submit</Button>\n                            {props.showDeleteButton && <Button color=\"danger\" block onClick={props.onDelete}>Delete</Button>}\n                            <Button color=\"secondary\" block onClick={props.onCancel}>Cancel</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default CustomModal","import React, { Component } from 'react'\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n    courseId: null,\n    batchName: null,\n    showAddBatchModal: false,\n    showEditBatchModal: false,\n    showEnterAllDataAlert: false,\n    notificationTitle: null,\n    notificationText: null,\n    showNotificationModal: false,\n    departmentId: null\n}\n\nclass Home extends Component {\n\n    state = { ...initialState }\n\n    componentDidMount() {\n        this.fetchCourses()\n    }\n\n    sendCollegeNotification() {\n        const { notificationText, notificationTitle } = this.state\n        if (notificationText && notificationTitle) {\n            let sendData = {\n                title: notificationTitle,\n                description: notificationText\n            }\n\n            // eslint-disable-next-line no-unused-expressions\n            this.state.departmentId ? sendData.departmentId = this.state.departmentId : null\n\n            axios.post('/notification', sendData)\n                .then(res => this.setState({ ...initialState }))\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    fetchCourses() {\n        axios.get(`/department/${\"5ca04efdc753b32d1bf90d18\"}`)\n            .then(res => {\n                this.setState({ department: res.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    addBatch() {\n        if (this.state.batchName) {\n            axios.put(`/batch`, { name: this.state.batchName, course: this.state.courseId, department: this.state.department[0]._id })\n                .then(res => {\n                    this.fetchCourses()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: false })\n        }\n    }\n\n    editBatch() {\n        if (this.state.batchName && this.state.batchId) {\n            axios.post(`/batch/${this.state.batchId}`, { name: this.state.batchName })\n                .then(res => {\n                    this.fetchCourses()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    deleteBatch() {\n        if (this.state.batchId) {\n            axios.delete(`/batch/${this.state.batchId}`)\n                .then(res => {\n                    this.fetchCourses()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: false })\n        }\n    }\n\n    render() {\n        if (this.state.department && this.state.department.length > 0) {\n            return (\n                <Container style={{ marginTop: 50 }}>\n\n                    <CustomModal\n                        isOpen={this.state.showAddBatchModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"batchName\", value: this.state.batchName, placeholder: \"Batch Name\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.addBatch()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <CustomModal\n                        isOpen={this.state.showEditBatchModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"batchName\", value: this.state.batchName, placeholder: \"Batch Name\" }\n                            ]\n                        }\n                        showDeleteButton={true}\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.editBatch()}\n                        onDelete={() => this.deleteBatch()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <CustomModal\n                        isOpen={this.state.showNotificationModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"notificationTitle\", value: this.state.notificationTitle, placeholder: \"Batch Name\" },\n                                { fieldName: \"notificationText\", value: this.state.notificationText, placeholder: \"Batch Name\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.sendCollegeNotification()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <Button\n                        color=\"primary\"\n                        onClick={() => this.setState({ showNotificationModal: true })}>\n                        Send College Notification\n                    </Button>\n\n                    {\n                        this.state.department &&\n                        <React.Fragment>\n                            <Row>\n                                <Col>\n                                    <h2 style={{ textAlign: 'center' }}>{this.state.department[0].name}</h2>\n                                    <Button style={{ margin: 10 }} color=\"primary\" onClick={() => this.setState({ showNotificationModal: true, departmentId: this.state.department[0]._id })}>Send Department Notification</Button>\n                                </Col>\n                            </Row>\n\n                            {\n                                this.state.department && this.state.department.length > 0 &&\n                                this.state.department.map(each => {\n                                    return (\n                                        <Row key={each.courses._id} style={{ marginTop: 25, marginBottom: 25 }}>\n                                            {\n                                                each.courses.hasOwnProperty(\"name\") ?\n                                                    <Col sm=\"12\">\n                                                        <Row>\n                                                            <Col sm=\"6\">\n                                                                <h3>{each.courses.name}</h3>\n                                                            </Col>\n                                                            <Col sm=\"6\">\n                                                                <Button style={{ margin: 10 }} color=\"primary\" onClick={() => this.setState({ courseId: each.courses._id, showAddBatchModal: true })}>Add New Batch</Button>\n\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                    :\n                                                    <Col sm=\"12\">\n                                                        <h3 style={{ textAlign: 'center' }}>Create a course in Department</h3>\n                                                    </Col>\n                                            }\n\n                                            {\n                                                each.courses.batches.map(batch => {\n                                                    return (\n                                                        <Col key={batch._id} sm=\"4\">\n                                                            <Card>\n                                                                <CardBody>\n                                                                    <CardTitle>{batch.name}</CardTitle>\n                                                                    <Link style={{ margin: 10, textDecoration: 'none', color: 'white' }} to={`/batch/${batch._id}`} ><Button color=\"primary\">Details</Button></Link>\n                                                                    <Button color=\"primary\" onClick={() => this.setState({ batchId: batch._id, batchName: batch.name, showEditBatchModal: true })}>Edit</Button>\n                                                                </CardBody>\n                                                            </Card>\n                                                        </Col>\n                                                    )\n                                                })\n                                            }\n                                        </Row>\n                                    )\n                                })\n                            }\n                        </React.Fragment>\n                    }\n                </Container>\n            )\n        } else {\n            return <p>No departments found</p>\n        }\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Container, Row, Col, Collapse, Card, Table, Button } from 'reactstrap';\nimport CustomModal from '../Components/CustomModal'\nimport { Link } from 'react-router-dom'\n\nconst initialState = {\n    deptId:null,\n    departmentName:'',\n    showAddDeptForm:false,\n    showEditDeptForm:false,\n    showEnterAllDataAlert:false,\n    showAddCourseForm:false,\n    showEditCourseForm:false,\n}\n\nclass Department extends Component {\n\n    state = { departments:'', ...initialState }\n\n    componentDidMount() {\n        this.fetchDepartments()\n    }\n\n    fetchDepartments() {\n        axios.get('/department')\n        .then(res => { this.setState({ departments:res.data }) })\n        .catch(err => console.log(err))\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]:e.target.value })\n    }\n\n    addDept() {\n        if(this.state.departmentName) {\n            axios.put('/department', { name:this.state.departmentName })\n            .then(res => this.setState({ departments: this.state.departments.concat(res.data), ...initialState } ))\n            .catch(err => {\n                alert(\"Server error. Please try again later\")\n                console.log(err)\n            })\n        } else {\n            this.setState({ showEnterAllDataAlert:true })\n        }\n    }\n\n    editDept() {\n        if(this.state.departmentName) {\n            axios.post(`/department/${this.state.deptId}`, { name:this.state.departmentName })\n            .then(res =>  {\n                // let itemIndex = null\n                \n                // this.state.departments.forEach((each, index) => {\n                //     if(each._id === res.data._id) itemIndex = index \n                // });\n                this.fetchDepartments()\n                this.setState({ ...initialState })\n                // this.setState((oldState) => {\n                //     oldState.departments[itemIndex].name = res.data.name\n                //     return {\n                //         departments:oldState.departments,\n                //         ...initialState\n                //     }\n                // })\n            })\n            .catch(err => {\n                alert(\"Server error. Please try again later\")\n                console.log(err)\n            })\n        } else {\n            this.setState({ showEnterAllDataAlert:true })\n        }\n    }\n\n    deleteDept() {\n        if(this.state.deptId) {\n            axios.delete(`/department/${this.state.deptId}`)\n            .then(res => {\n                this.setState({\n                    departments:this.state.departments.filter(each => each._id !== res.data._id),\n                    ...initialState\n                })\n            })\n        } else {\n            alert(\"Error occurred\")\n        }\n    }\n\n    addCourse() {\n        if(this.state.deptId && this.state.courseName) {\n            axios.put('/course', { department:this.state.deptId, name:this.state.courseName })\n            .then(res => {\n                this.fetchDepartments()\n                this.setState({ ...initialState})\n                // let itemIndex = null\n                // this.state.departments.forEach((each, index) => {\n                //     if(each._id === res.data.department) itemIndex = index \n                // });\n\n                // this.setState((oldState) => {\n                //     oldState.departments[itemIndex].courses.length > 0 ? \n                //         oldState.departments[itemIndex].courses.push(res.data)\n                //     :\n                //         oldState.departments[itemIndex].courses = [res.data]\n\n                //     return { departments:oldState.departments, ...initialState }\n                // })\n\n            })\n            .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert:true })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                <CustomModal\n                    isOpen={this.state.showAddDeptForm}\n                    handleInputChange={this.handleInputChange}\n                    fields={\n                        [\n                            { fieldName:\"departmentName\", value:this.state.departmentName, placeholder:\"Department Name\"}\n                        ]\n                    }\n                    showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                    onSubmit={ () => this.addDept() }\n                    onCancel={ () => this.setState({ ...initialState })}\n                />\n\n                <CustomModal\n                    isOpen={this.state.showEditDeptForm}\n                    handleInputChange={this.handleInputChange}\n                    fields={\n                        [\n                            { fieldName:\"departmentName\", value:this.state.departmentName, placeholder:\"Department Name\"}\n                        ]\n                    }\n                    showDeleteButton={this.state.showEditDeptForm}\n                    onDelete={ () => this.deleteDept() }\n                    showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                    onSubmit={ () => this.editDept() }\n                    onCancel={ () => this.setState({ ...initialState })}\n                />\n\n                <CustomModal\n                    isOpen={this.state.showAddCourseForm}\n                    handleInputChange={this.handleInputChange}\n                    fields={\n                        [\n                            { fieldName:\"courseName\", value:this.state.courseName, placeholder:\"Course Name\"}\n                        ]\n                    }\n                    showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                    onSubmit={ () => this.addCourse() }\n                    onCancel={ () => this.setState({ ...initialState })}\n                />\n\n                \n                \n                <Container>\n                    <Row>\n                        { this.state.departments && this.state.departments.length > 0 ? \n                            this.state.departments.map((each, index) => {\n                                return (\n                                    <Col key={each._id} sm=\"12\">\n                                        \n                                        <Button\n                                            onClick={ () => this.setState(this.state.openTab === index ? { openTab:-1 } :  { openTab:index }) }\n                                            size=\"lg\" outline color=\"primary\" block>\n                                                {each.name} Department\n                                        </Button>\n\n                                        <Collapse isOpen={index === this.state.openTab}>\n                                            <Card style={{ marginBottom:20 }}>\n                                                <Row>\n                                                    <Col>\n                                                        <Button style={{ margin:5 }} color=\"primary\" onClick={ () => this.setState({ deptId:each._id, courseName:'', showAddCourseForm:true }) }>Add New Course</Button>{}\n                                                        <Button color=\"primary\" onClick={ () => this.setState({ deptId:each._id, departmentName:each.name, showAddDeptForm:false, showEditDeptForm:true }) }>Edit</Button>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Table >\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>No</th>\n                                                                    <th>Courses</th>\n                                                                    <th>Actions</th>\n                                                                </tr>\n                                                            </thead>\n                                                                        \n                                                        {\n                                                            each.courses && each.courses.length > 0 ?\n                                                                each.courses.map((course, courseIndex) => {\n                                                                    return (\n                                                                            <tbody key={course._id}>\n                                                                                <tr>\n                                                                                    <td>{courseIndex + 1}</td>\n                                                                                    <td>{course.name}</td>\n                                                                                    <td>\n                                                                                    <Link style={{ margin:10, textDecoration: 'none', color: 'white' }} to={`/course/${course._id}`} >\n                                                                                        <Button color=\"primary\">Details</Button>\n                                                                                    </Link>\n                                                                                        {/* <Button color=\"link\" onClick={ () => this.setState({ deptId:each._id, courseId:course._id, courseName:course.name, showEditCourseForm:true }) }>Edit</Button> */}\n                                                                                    </td>\n                                                                                </tr>\n                                                                            </tbody>\n                                                                        \n                                                                    )\n                                                                })\n                                                            :\n                                                            <tbody>\n                                                                <tr>\n                                                                    <td><p style={{ textAlign:'center' }}>No Courses. Add Some.</p></td>\n                                                                </tr>\n                                                            </tbody>\n                                                            \n                                                        }\n                                                        </Table>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        </Collapse>\n                                    </Col>\n                                )\n                            })\n                            :\n                            <Col>\n                                <p style={{ textAlign:'center' }}>No Departments Found</p>\n                            </Col>\n                        }\n                    </Row>\n\n                    <Row>\n                        <Col style={{ padding:20 }}>\n                            <Button block color=\"primary\" onClick={ () => this.setState({ showAddDeptForm:true }) }>Add New Department</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Department","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Container, Row, Col, Collapse, Table, Button, Card, CardBody, CardTitle } from 'reactstrap';\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n  showEnterAllDataAlert: false,\n  showEditCourseForm: false,\n  courseName: null,\n  showAddSubjectForm: null,\n  subjectName: null,\n  subjectSemester: null,\n  showEditSubjectForm:null\n}\n\n\nclass Course extends Component {\n\n  state = { course: null, openTab: -1, ...initialState }\n\n  componentDidMount() {\n    this.fetchCourseDetails(this.props.match.params.courseId)\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  fetchCourseDetails(courseId) {\n    axios.get(`/course/${courseId}`)\n      .then(res => {\n        let course = res.data[0]\n\n        let semesterSubjectArray = {}\n\n        course.subjects.forEach(each => {\n          if (semesterSubjectArray[each.semester]) {\n            semesterSubjectArray[each.semester].push(each)\n          } else {\n            semesterSubjectArray[each.semester] = [each]\n          }\n        })\n\n        this.setState({ course, subjects: semesterSubjectArray })\n\n      })\n      .catch(err => console.log(err))\n  }\n\n  editCourse() {\n    if (this.state.courseName && this.state.courseId) {\n      axios.post(`/course/${this.state.courseId}`, { name: this.state.courseName })\n        .then(res => {\n          this.fetchCourseDetails(this.props.match.params.courseId)\n          this.setState({ ...initialState })\n          // let departmentIndex = null\n          // this.state.departments.forEach((each, index) => {\n          //   if (each._id === res.data.department) departmentIndex = index\n          // });\n\n          // let courseIndex = null\n          // this.state.departments[departmentIndex].courses.forEach((each, index) => {\n          //   if (each._id === res.data._id) courseIndex = index\n          // })\n\n          // this.setState((oldState) => {\n          //   oldState.departments[departmentIndex].courses[courseIndex].name = res.data.name\n          //   return { departments: oldState.departments, ...initialState }\n          // })\n        })\n        .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert: true })\n    }\n  }\n\n  deleteCourse() {\n    if (this.props.match.params.courseId) {\n      axios.delete(`/course/${this.props.match.params.courseId}`)\n        .then(res => {\n          console.log(res)\n          this.props.history.goBack()\n\n          // let departmentIndex = null\n          // this.state.departments.forEach((each, index) => {\n          //   if (each._id === res.data.department) departmentIndex = index\n          // });\n\n          // let updatedCoursesList = this.state.departments[departmentIndex].courses.filter((each, index) => {\n          //   return each._id !== res.data._id\n          // })\n\n          // this.setState((oldState) => {\n          //   oldState.departments[departmentIndex].courses = updatedCoursesList\n          //   return { departments: oldState.departments, ...initialState }\n          // })\n\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  addSubject() {\n    const { subjectName, subjectSemester } = this.state\n    if (subjectName && subjectSemester) {\n      axios.put(`/subject`, { name: subjectName, semester: subjectSemester, course: this.props.match.params.courseId })\n        .then(res => {\n          this.fetchCourseDetails(this.props.match.params.courseId)\n          this.setState({ ...initialState })\n        })\n        .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert: true })\n    }\n  }\n\n  editSubject() {\n    const { subjectName, subjectSemester, subjectId } = this.state\n    if(subjectName && subjectSemester && subjectId) {\n      axios.post(`/subject/${subjectId}`, { name:subjectName, semester:subjectSemester })\n      .then(res => {\n        this.fetchCourseDetails(this.props.match.params.courseId)\n        this.setState({ ...initialState })\n      })\n      .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert:true })\n    }\n  }\n\n  deleteSubject() {\n    const { subjectId } = this.state\n    if(subjectId) {\n      axios.delete(`/subject/${subjectId}`)\n      .then(res => {\n        this.fetchCourseDetails(this.props.match.params.courseId)\n        this.setState({ ...initialState })\n      })\n      .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert:true })\n    }\n  }\n\n  render() {\n    if (this.state.course) {\n      const { course } = this.state\n      return (\n        <>\n          <CustomModal\n            isOpen={this.state.showEditCourseForm}\n            handleInputChange={this.handleInputChange}\n            fields={\n              [\n                { fieldName: \"courseName\", value: this.state.courseName, placeholder: \"Course Name\" }\n              ]\n            }\n            showDeleteButton={this.state.showEditCourseForm}\n            showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n            onSubmit={() => this.editCourse()}\n            onDelete={() => this.deleteCourse()}\n            onCancel={() => this.setState({ ...initialState })}\n          />\n\n          <CustomModal\n            isOpen={this.state.showAddSubjectForm}\n            handleInputChange={this.handleInputChange}\n            fields={\n              [\n                { fieldName: \"subjectName\", value: this.state.subjectName, placeholder: \"Subject Name\" },\n                { fieldName: \"subjectSemester\", value: this.state.subjectSemester, placeholder: \"Semester\", type: \"number\" }\n              ]\n            }\n            showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n            onSubmit={() => this.addSubject()}\n            onCancel={() => this.setState({ ...initialState })}\n          />\n\n          <CustomModal\n            isOpen={this.state.showEditSubjectForm}\n            handleInputChange={this.handleInputChange}\n            fields={\n              [\n                { fieldName: \"subjectName\", value: this.state.subjectName, placeholder: \"Subject Name\" },\n                { fieldName: \"subjectSemester\", value: this.state.subjectSemester, placeholder: \"Semester\", type: \"number\" }\n              ]\n            }\n            showDeleteButton={this.state.showEditSubjectForm}\n            showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n            onSubmit={ () => this.editSubject() }\n            onDelete={ () => this.deleteSubject() }\n            onCancel={ () => this.setState({ ...initialState }) }\n          />\n\n          <Container>\n            <Row style={{ marginTop: 50, marginBottom: 50 }}>\n              <Col>\n                <Card>\n                  <CardBody>\n                    <Row>\n                      <Col sm=\"12\">\n                        <CardTitle>{course.name}</CardTitle>\n                      </Col>\n                    </Row>\n                    <Row style={{ margin: 10, marginTop: 20 }}>\n                      <Button style={{ margin: 10 }} onClick={() => this.setState({ subjectName: '', subjectSemester:null, showAddSubjectForm: true })} color=\"primary\">Add Subject</Button>{}\n                      <Button color=\"primary\" style={{ margin: 10 }} onClick={() => this.setState({ courseId: course._id, courseName: course.name, showEditCourseForm: true })}>Edit</Button>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n\n            <Row>\n              {\n                this.state.subjects && Object.keys(this.state.subjects).length > 0 &&\n                Object.keys(this.state.subjects).map((key, index) => {\n                  const subjects = this.state.subjects[key]\n                  return (\n                    <Col sm=\"12\" key={key}>\n                      <Button onClick={() => this.setState(this.state.openTab === index ? { openTab: -1 } : { openTab:index })}\n                        size=\"lg\" outline color=\"primary\" block>Semester : {key}</Button>\n\n                      <Collapse isOpen={this.state.openTab === index}>\n                        <Card>\n                          <Row>\n                            {\n                              subjects && subjects.length > 0 &&\n                              <Col>\n                                <Table>\n                                  <thead>\n                                    <tr>\n                                      <th>No</th>\n                                      <th>Subject Name</th>\n                                      <th>Actions</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {\n                                      subjects.map((each, index) => {\n                                        return (\n                                          <tr key={each._id}>\n                                            <td>{index+1}</td>\n                                            <td>{each.name}</td>\n                                            <td>\n                                              <Button color=\"primary\" onClick={ () => this.setState({ subjectName:each.name, subjectId:each._id, subjectSemester:key, showEditSubjectForm:true })}>Edit</Button>\n                                            </td>\n                                          </tr>\n                                        )\n                                      })\n                                    }\n\n                                  </tbody>\n                                </Table>\n                              </Col>\n                            }\n                          </Row>\n                        </Card>\n                      </Collapse>\n                    </Col>\n                  )\n                })\n              }\n            </Row>\n          </Container>\n        </>\n      )\n    } else {\n      return <p>Loading...</p>\n    }\n  }\n}\n\n\nexport default Course","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Container, Row, Col, Table, Button, Card, CardBody, CardText, CardTitle } from 'reactstrap';\nimport CustomModal from '../Components/CustomModal'\nimport { Link } from 'react-router-dom'\n\nconst initialState = {\n    studentName: null, mobile: null, mail: null, address: null, registerNumber: null,\n    showAddStudentForm: false,\n    showEnterAllDataAlert: false,\n    showNotificationModal: false,\n    notificationTitle: null,\n    notificationText: null\n}\n\nclass Batch extends Component {\n\n    state = { batchData: null, students: null, ...initialState }\n\n    componentDidMount() {\n        this.fetchBatchDetailsAndStudents(this.props.match.params.batchId)\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    sendCollegeNotification() {\n        const { notificationText, notificationTitle } = this.state\n        if (notificationText && notificationTitle) {\n            axios.post('/notification', {\n                title: notificationTitle,\n                description: notificationText,\n                batchId: this.props.match.params.batchId\n            })\n                .then(res => this.setState({ ...initialState }))\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    fetchBatchDetailsAndStudents(batchId) {\n        axios.get(`/batch/${batchId}`)\n            .then(res => {\n                this.setState({ batchData: res.data.batchData[0], students: res.data.students })\n            })\n            .catch(err => console.log(err))\n    }\n\n    addStudent() {\n        const { studentName, mobile, mail, address, registerNumber } = this.state\n        if (studentName && mobile && mail && address && registerNumber) {\n\n            const department = this.state.batchData.department[0]._id\n            const course = this.state.batchData.course[0]._id\n            const batch = this.state.batchData._id\n\n            axios.put('/student', {\n                department, course, batch,\n                name: studentName,\n                mobile, mail, address, registerNumber\n            })\n                .then(res => {\n                    this.setState((currentState) => {\n                        currentState.students.push(res.data)\n                        return { students: currentState.students, ...initialState }\n                    })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n\n    render() {\n        if (this.state.batchData) {\n            return (\n                <>\n                    <CustomModal\n                        isOpen={this.state.showAddStudentForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"studentName\", value: this.state.studentName, placeholder: \"Student Name\" },\n                                { fieldName: \"mobile\", value: this.state.mobile, placeholder: \"Mobile\" },\n                                { fieldName: \"mail\", value: this.state.mail, placeholder: \"E-Mail\" },\n                                { fieldName: \"address\", value: this.state.address, placeholder: \"Address\" },\n                                { fieldName: \"registerNumber\", value: this.state.registerNumber, placeholder: \"Register Number\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.addStudent()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <CustomModal\n                        isOpen={this.state.showNotificationModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"notificationTitle\", value: this.state.notificationTitle, placeholder: \"Batch Name\" },\n                                { fieldName: \"notificationText\", value: this.state.notificationText, placeholder: \"Batch Name\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.sendCollegeNotification()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <Container>\n                        <Row style={{ marginTop: 50, marginBottom: 50 }}>\n                            <Col>\n                                <Card>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\">\n                                                <CardTitle>Department : {this.state.batchData.department[0].name}</CardTitle>\n                                                <CardText>Course : {this.state.batchData.course[0].name}</CardText>\n                                                <CardText>Batch : {this.state.batchData.name}</CardText>\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ margin: 10, marginTop: 20 }}>\n                                            <Button color=\"primary\" style={{ margin: 10 }} onClick={() => this.setState({ showAddStudentForm: true })}>Add Student</Button>\n                                            <Button color=\"primary\" style={{ margin: 10 }} onClick={() => this.setState({ showNotificationModal: true })}>Send College Notification</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                {\n                                    this.state.students && this.state.students.length > 0 &&\n                                    <Table>\n                                        <thead>\n                                            <tr>\n                                                <th>No.</th>\n                                                <th>Name</th>\n                                                <th>Register Numer</th>\n                                                <th>Actions</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                this.state.students.map((each, index) => {\n                                                    return (\n                                                        <tr key={each._id}>\n                                                            <td>{index + 1}</td>\n                                                            <td>{each.name}</td>\n                                                            <td>{each.registerNumber}</td>\n                                                            <td>\n                                                                <Link to={`/student/${each._id}`} style={{ textDecoration: 'none', color: 'white' }}>\n                                                                    <Button color=\"link\">Details</Button>\n                                                                </Link>\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                })\n                                            }\n                                        </tbody>\n                                    </Table>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                </>\n            )\n        } else {\n            return (\n                <p style={{ textAlign: 'center' }}>Fetching data....</p>\n            )\n        }\n\n    }\n}\n\nexport default Batch","import React, { Component } from 'react'\nimport { Container, Row, Col, Table, Button } from 'reactstrap';\nimport axios from 'axios'\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n    showAddTeacherForm: false,\n    showEditTeacherForm: false,\n    showEnterAllDataAlert: false,\n}\nclass Teacher extends Component {\n\n    state = { teachers: [], ...initialState }\n\n    componentDidMount() {\n        this.fetchDepartments()\n        this.getTeachers()\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    fetchDepartments() {\n        axios.get('/department')\n            .then(res => { this.setState({ departments: res.data }) })\n            .catch(err => console.log(err))\n    }\n\n    getTeachers() {\n        axios.get('/teacher')\n            .then(res => {\n                this.setState({ teachers: res.data, ...initialState })\n            })\n            .catch(err => console.log(err))\n    }\n\n    addTeacher() {\n        const { teacherName, teacherEmail, teacherPassword, teacherDepartment } = this.state\n        if (teacherName && teacherEmail && teacherPassword && teacherDepartment && teacherDepartment !== '1') {\n            axios.put('/teacher', { name: teacherName, email:teacherEmail, password:teacherPassword, department: teacherDepartment })\n                .then(res => {\n                    this.getTeachers()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    editTeacher() {\n        const { teacherId, teacherName, teacherEmail, teacherDepartment } = this.state\n        if (teacherId && teacherName && teacherEmail && teacherDepartment && teacherDepartment !== '1') {\n            axios.post(`/teacher/${teacherId}`, { name: teacherName, teacherEmail:teacherEmail, department: teacherDepartment })\n                .then(res => {\n                    this.setState({ ...initialState })\n                    this.getTeachers()\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.departments\n                    &&\n                    <CustomModal\n                        isOpen={this.state.showAddTeacherForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"teacherName\", value: this.state.teacherName, placeholder: \"Name\" },\n                                { fieldName: \"teacherEmail\", value: this.state.teacherEmail, placeholder: \"Email\" },\n                                { fieldName: \"teacherPassword\", value: this.state.teacherPassword, placeholder: \"Password\", type:\"password\" },\n                            ]\n                        }\n                        selectFields={\n                            [\n                                {\n                                    data: [{ _id: '1', name: 'Select Department' }, ...this.state.departments],\n                                    fieldName: \"teacherDepartment\",\n                                    value: this.state.teacherDepartment\n                                }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.addTeacher()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n                }\n\n                {\n                    this.state.departments\n                    &&\n                    <CustomModal\n                        isOpen={this.state.showEditTeacherForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"teacherName\", value: this.state.teacherName, placeholder: \"Name\" },\n                                { fieldName: \"teacherEmail\", value: this.state.teacherEmail, placeholder: \"Email\" },\n                            ]\n                        }\n                        selectFields={\n                            [\n                                {\n                                    data: [{ _id: '1', name: 'Select Department' }, ...this.state.departments],\n                                    fieldName: \"teacherDepartment\",\n                                    value: this.state.teacherDepartment\n                                }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.editTeacher()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n                }\n\n                <Container>\n                    <Row>\n                        <Col style={{ padding: 20 }}>\n                            <Button color=\"primary\" onClick={() => this.setState({ showAddTeacherForm: true })}>Add New Teacher</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        {\n                            this.state.teachers && this.state.teachers.length > 0 &&\n                            <Col>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>No.</th>\n                                            <th>Name</th>\n                                            <th>Email</th>\n                                            <th>Department</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.teachers.map((teacher, index) => {\n                                                return (\n                                                    <tr key={teacher._id}>\n                                                        <td>{index + 1}</td>\n                                                        <td>{teacher.name}</td>\n                                                        <td>{teacher.email}</td>\n                                                        <td>{teacher.department.name}</td>\n                                                        <td>\n                                                            <Button color=\"link\" onClick={() => this.setState({ teacherName: teacher.name, teacherEmail:teacher.email, teacherDepartment: teacher.department._id, teacherId: teacher._id, showEditTeacherForm: true })}>Edit</Button>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        }\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Teacher","import React, { Component } from 'react'\nimport { Container, Row, Col, Collapse, Table, Button } from 'reactstrap';\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\nimport axios from 'axios'\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n    showEditSubjectForm: false,\n    showEnterAllDataAlert: false\n}\n\nclass Student extends Component {\n\n    state = { openTab: 0, ...initialState }\n\n    componentDidMount() {\n        this.fetchStudentDetails(this.props.match.params.studentId)\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    fetchStudentDetails(studentId) {\n        axios.get(`/student/${studentId}`)\n            .then(res => {\n                this.fetchCourseDetails(res.data.course._id, res.data)\n                this.setState({ student: res.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    fetchCourseDetails(courseId, student) {\n        axios.get(`/course/${courseId}`)\n            .then(res => {\n\n                let course = res.data[0]\n                let semesterSubjectArray = {}\n\n                course.subjects.forEach(each => {\n                    if (semesterSubjectArray[each.semester]) {\n                        semesterSubjectArray[each.semester].push(each)\n                    } else {\n                        semesterSubjectArray[each.semester] = [each]\n                    }\n                })\n\n                this.setState({ course })\n\n                this.combineSubjectAndStudent(semesterSubjectArray, student)\n\n            })\n            .catch(err => console.log(err))\n    }\n\n    combineSubjectAndStudent(semesterSubjectArray, student) {\n\n        if (!student.subjectData) { student.subjectData = [] }\n        const { subjectData } = student\n\n        Object.keys(semesterSubjectArray).map((semNumber, index) => {\n            return semesterSubjectArray[semNumber].map((eachSubject, innerIndex) => {\n                let foundItem = subjectData.filter(each => each.subjectId === eachSubject._id)\n                if (foundItem.length > 0) {\n                    return semesterSubjectArray[semNumber][innerIndex].subjectData = foundItem[0]\n                } else {\n                    return semesterSubjectArray[semNumber][innerIndex].subjectData = {\n                        subjectId: eachSubject._id,\n                        firstInternal: null,\n                        secondInternal: null,\n                        attendacePercentage: null\n                    }\n                }\n            })\n        })\n\n        this.setState({ subjects: semesterSubjectArray })\n    }\n\n    editSubjectDetails() {\n        const { editingSubjectId, firstInternal, secondInternal, attendancePercentage } = this.state\n        if (editingSubjectId && firstInternal && secondInternal && attendancePercentage) {\n            axios.post(`/student/${this.props.match.params.studentId}/updateSubjectData`, {\n                editingSubjectId, firstInternal, secondInternal, attendancePercentage\n            })\n                .then(res => {\n                    this.fetchStudentDetails(this.props.match.params.studentId)\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    render() {\n        const { student } = this.state\n\n        if (this.state.student) {\n            return (\n                <div>\n                    <CustomModal\n                        isOpen={this.state.showEditSubjectForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"firstInternal\", value: this.state.firstInternal, placeholder: \"First Internal Marks\", type: \"number\" },\n                                { fieldName: \"secondInternal\", value: this.state.secondInternal, placeholder: \"Second Internal Marks\", type: \"number\" },\n                                { fieldName: \"attendancePercentage\", value: this.state.attendancePercentage, placeholder: \"Attendance Percentage\", type: \"number\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.editSubjectDetails()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <Container>\n                        <Row style={{ marginTop: 50, marginBottom: 50 }}>\n                            <Col>\n                                <Card>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"6\">\n                                                <CardTitle>{student.name}</CardTitle>\n                                                <CardText>{student.registerNumber}</CardText>\n                                                <CardText>{student.course.name}</CardText>\n                                                <CardText>{student.batch.name} {student.course.name}</CardText>\n                                            </Col>\n                                            <Col sm=\"6\">\n                                                <CardText>{student.mobile}</CardText>\n                                                <CardText>{student.address}</CardText>\n                                                <CardText>{student.mail}</CardText>\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ margin: 10, marginTop: 20 }}>\n                                            <Button color=\"primary\">Edit Detail</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            {\n                                this.state.subjects && Object.keys(this.state.subjects).length > 0 &&\n                                Object.keys(this.state.subjects).map((key, index) => {\n                                    const subjects = this.state.subjects[key]\n                                    return (\n                                        <Col sm=\"12\" key={key}>\n                                            <Button onClick={() => this.setState(this.state.openTab === index ? { openTab: -1 } : { openTab: index })}\n                                                size=\"lg\" outline color=\"primary\" block>Semester : {key}</Button>\n\n                                            <Collapse isOpen={this.state.openTab === index}>\n                                                <Card>\n                                                    <Row>\n                                                        {\n                                                            subjects && subjects.length > 0 &&\n                                                            <Col>\n                                                                <Table>\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <th>No</th>\n                                                                            <th>Subject Name</th>\n                                                                            <th>1st Internal</th>\n                                                                            <th>2nd Internal</th>\n                                                                            <th>Attendance</th>\n                                                                            <th>Actions</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {\n                                                                            subjects.map((each, index) => {\n                                                                                // console.log(each)\n                                                                                return (\n                                                                                    <tr key={each._id}>\n                                                                                        <td>{index + 1}</td>\n                                                                                        <td>{each.name}</td>\n                                                                                        <td>{each.subjectData.firstInternal || 'NA'}</td>\n                                                                                        <td>{each.subjectData.secondInternal || 'NA'}</td>\n                                                                                        <td>{each.subjectData.attendancePercentage || 'NA'}</td>\n                                                                                        <td>\n                                                                                            <Button color=\"primary\" onClick={() => this.setState({\n                                                                                                editingSubjectId: each._id,\n                                                                                                firstInternal: each.subjectData.firstInternal,\n                                                                                                secondInternal: each.subjectData.secondInternal,\n                                                                                                attendancePercentage: each.subjectData.attendancePercentage,\n                                                                                                showEditSubjectForm: true\n                                                                                            })}>Edit</Button>\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                )\n                                                                            })\n                                                                        }\n\n                                                                    </tbody>\n                                                                </Table>\n                                                            </Col>\n                                                        }\n                                                    </Row>\n                                                </Card>\n                                            </Collapse>\n                                        </Col>\n                                    )\n                                })\n                            }\n                        </Row>\n                    </Container>\n                </div>\n            )\n        } else {\n            return <p>Loading</p>\n        }\n    }\n}\n\nexport default Student","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport Home from '../Pages/Home'\nimport Dept from '../Pages/Dept'\nimport Course from '../Pages/Course'\nimport Batch from '../Pages/Batch'\nimport Teacher from '../Pages/Teacher'\nimport Student from '../Pages/Student'\n\nconst Main = () => {\n    return(\n        <React.Fragment>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/dept\" exact component={Dept} />\n                <Route path=\"/course/:courseId\" exact component={Course} />\n                <Route path=\"/batch/:batchId\" exact component={Batch} />\n                <Route path='/student/:studentId' exact component={Student} />\n                <Route path='/teacher' exact component={Teacher} />\n            </Switch>\n        </React.Fragment>\n    )\n}\n\nexport default Main","import React, { Component } from 'react'\nimport { Container, Row, Col, Form, Button, FormGroup, Input, Alert } from 'reactstrap'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { login } from '../redux/actions'\n\nconst initialState = {\n    showEnterAllDataAlert:false\n}\n\nclass Auth extends Component {\n\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            ...initialState,\n            activeTab: '1',\n            email: \"parengalhisham@gmail.com\",\n            password: \"Hisham123\"\n        };\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    handleLogin() {\n        const { email, password } = this.state\n        if(email && password) {\n            axios.post('/teacher/login', { email, password })\n            .then(res => { this.props.login(res.data) })\n            .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert:true }, () => {\n                setTimeout(() => {\n                    this.setState({ showEnterAllDataAlert:false })\n                }, 3000)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row style={{ marginTop: '30vh' }}>\n                        <Col sm={{ size: 6, offset: 3 }}>\n                            <Row>\n                                <Col sm=\"12\">\n                                    <Form>\n                                        <h3 style={{ textAlign:'center', marginBottom:'50px' }}>Login</h3>\n                                        <FormGroup>\n                                            <Input\n                                                type=\"email\"\n                                                name=\"email\"\n                                                placeholder=\"Enter Email\"\n                                                value={this.state.email || ''}\n                                                onChange={this.handleInputChange}\n                                            />\n                                        </FormGroup>\n\n                                        <FormGroup>\n                                            <Input\n                                                type=\"password\"\n                                                name=\"password\"\n                                                placeholder=\"Enter Password\"\n                                                value={this.state.password || ''}\n                                                onChange={this.handleInputChange}\n                                            />\n                                        </FormGroup>\n\n                                        <Button color=\"primary\" block onClick={() => this.handleLogin()}>Submit</Button>\n                                    </Form>\n                                </Col>\n                            </Row>\n                            <Row>\n                            <Col style={{ marginTop:'20px' }}>\n                                <Alert isOpen={this.state.showEnterAllDataAlert} color=\"danger\">Enter all data before submitting</Alert>\n                            </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { login })(Auth)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Route, withRouter } from 'react-router-dom'\n\nimport Header from './Components/Header'\nimport Main from './Components/Main'\nimport Auth from './Pages/Auth'\n\nimport axios from 'axios'\nimport { URL } from './Config/env'\naxios.defaults.baseURL = URL \n\nclass App extends Component {\n  render() {\n    if(this.props.auth._id) {\n      return (\n        <React.Fragment>\n          <Header />\n          <Main />\n        </React.Fragment>\n      )\n    } else {\n      return <Route path='/' component={Auth} />\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth:state.auth\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// export const URL = 'http://localhost:8080/api' //Local url\nexport const URL = 'http://68.183.86.29:8000/api' //Live server user","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN, LOGOUT } from '../types'\n\nconst initialState = { _id: '', name:'', department:'', roleId:'' }\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case LOGIN:\n            return { ...state, ...action.payload }\n        case LOGOUT:\n        return { ...initialState }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport AuthReducer from './auth_reducer'\n\nexport default combineReducers({\n    auth:AuthReducer\n})","\nimport { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport rootReducer from './redux/reducers';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer)\nexport const persistor = persistStore(store)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './store'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </PersistGate>    \n    </Provider>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}