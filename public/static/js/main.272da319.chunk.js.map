{"version":3,"sources":["Components/Header.js","redux/actions/auth_actions.js","redux/types.js","Components/CustomModal.js","Pages/Home.js","Pages/Dept.js","Pages/Course.js","Pages/Batch.js","Pages/Teacher.js","Pages/Student.js","Pages/Notifications.js","Components/Main.js","Pages/Auth.js","App.js","Config/env.js","serviceWorker.js","redux/reducers/auth_reducer.js","redux/reducers/index.js","store.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","handleLogout","logout","setState","react_default","a","createElement","Navbar","color","light","expand","NavbarToggler","onClick","NavbarBrand","tag","Link","to","Collapse","navbar","Nav","className","NavItem","NavLink","roleId","Fragment","Component","connect","auth","type","CustomModal","Modal","ModalBody","Form","fields","map","each","FormGroup","key","fieldName","Label","for","placeholder","Input","name","onChange","handleInputChange","value","selectFields","eachSelect","id","data","_id","ModalFooter","Container","Row","Col","Alert","showEnterAllDataAlert","Button","block","onSubmit","showDeleteButton","onDelete","onCancel","initialState","courseId","batchName","showAddBatchModal","showEditBatchModal","notificationTitle","notificationText","showNotificationModal","departmentId","Home","e","defineProperty","target","fetchCourses","_this2","_this$state","sendData","title","description","axios","post","then","res","objectSpread","catch","err","console","log","_this3","get","concat","department","_this4","put","course","_this5","batchId","_this6","delete","_this7","length","style","marginTop","Components_CustomModal","addBatch","editBatch","deleteBatch","sendCollegeNotification","textAlign","margin","courses","marginBottom","hasOwnProperty","sm","batches","batch","Card","CardBody","CardTitle","react_router_dom","textDecoration","deptId","departmentName","showAddDeptForm","showEditDeptForm","showAddCourseForm","showEditCourseForm","Department","departments","openTab","fetchDepartments","alert","filter","courseName","addDept","deleteDept","editDept","addCourse","index","size","outline","Table","courseIndex","padding","showAddSubjectForm","subjectName","subjectSemester","showEditSubjectForm","Course","fetchCourseDetails","match","params","semesterSubjectArray","subjects","forEach","semester","push","history","goBack","_this$state2","subjectId","_this8","editCourse","deleteCourse","addSubject","editSubject","deleteSubject","keys","studentName","mobile","mail","address","registerNumber","showAddStudentForm","Batch","batchData","students","fetchBatchDetailsAndStudents","currentState","addStudent","sendBatchNotification","CardText","showAddTeacherForm","showEditTeacherForm","Teacher","teachers","getTeachers","teacherName","teacherEmail","teacherPassword","teacherDepartment","email","password","teacherId","toConsumableArray","addTeacher","deleteTeacher","editTeacher","teacher","showEditStudentForm","Student","fetchStudentDetails","studentId","student","combineSubjectAndStudent","subjectData","semNumber","eachSubject","innerIndex","foundItem","firstInternal","secondInternal","attendacePercentage","editingSubjectId","attendancePercentage","editStudentDetails","deleteStudent","editSubjectDetails","Notifications","notifications","fetchNotifications","notificationId","deleteNotification","variant","Main","react_router","path","exact","component","Dept","Auth","activeTab","tab","login","setTimeout","offset","handleLogin","userData","payload","defaults","baseURL","App","Components_Header","Components_Main","withRouter","Boolean","window","location","hostname","combineReducers","arguments","undefined","action","persistConfig","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","ReactDOM","render","es","integration_react","loading","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.272da319.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Navbar, NavbarToggler, NavbarBrand, Collapse, Nav, NavItem, NavLink } from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { logout } from '../redux/actions'\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props)\n        this.toggle = this.toggle.bind(this)\n        this.state = { isOpen:false }\n        this.handleLogout = this.handleLogout.bind(this)\n    }\n\n    handleLogout() {\n        this.props.logout()\n    }\n\n    toggle() { this.setState({ isOpen:!this.state.isOpen }) }\n\n    render() {\n        return(\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <NavbarToggler onClick={this.toggle} />\n                    <NavbarBrand tag={Link} to=\"/\">College Dashboard</NavbarBrand>\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/\" >Home</NavLink>\n                            </NavItem>\n                            {\n                                this.props.roleId === 2 && \n                                <> <NavItem>\n                                    <NavLink tag={Link} to=\"/dept\" >Departments</NavLink>\n                                </NavItem>\n                                \n                                <NavItem>\n                                    <NavLink tag={Link} to=\"/teacher\" >Teacher</NavLink>\n                                </NavItem>\n\n                                <NavItem>\n                                    <NavLink tag={Link} to=\"/notifications\" >Notifications</NavLink>\n                                </NavItem>\n                                </>\n                            }\n                            <NavItem onClick={this.handleLogout}>\n                                <NavLink>Logout</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        roleId:state.auth.roleId\n    }\n}\n\nexport default connect(mapStateToProps, { logout })(Header)","import { LOGIN, LOGOUT } from '../types'\n\nexport const login = (userData) => {\n    return {\n        type:LOGIN,\n        payload:userData\n    }\n}\n\nexport const logout = () => {\n    return {\n        type:LOGOUT\n    }\n}","export const LOGIN = 'login'\nexport const LOGOUT = 'logout'","import React from 'react'\nimport { Modal, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Container, Row, Col, Alert, Button } from 'reactstrap'\n\nconst CustomModal = (props) => {\n    return (\n        <Modal isOpen={props.isOpen}>\n            <ModalBody>\n                <Form>\n                    {\n                        props.fields.map(each => {\n                            return (\n                                <FormGroup key={each.fieldName}>\n                                    <Label for={each.fieldName}>Enter {each.placeholder}</Label>\n                                    <Input type={each.type || \"text\"} name={each.fieldName} onChange={props.handleInputChange} value={each.value || ''} />\n                                </FormGroup>\n                            )\n                        })\n                    }\n                    {\n                        props.selectFields && props.selectFields.map(eachSelect => {\n                            return (\n                                <FormGroup key={eachSelect.fieldName}>\n                                    <Label for={eachSelect.fieldName}>Select</Label>\n                                    <Input value={eachSelect.value} type=\"select\" name={eachSelect.fieldName} id={eachSelect.fieldName} onChange={props.handleInputChange}>\n                                        {\n                                            eachSelect.data.map((each) => {\n                                                return (<option key={each._id} value={each._id}>{each.name}</option>)\n                                            })\n                                        }\n                                    </Input>\n                                </FormGroup>\n                            )\n                        })\n\n                    }\n                </Form>\n            </ModalBody>\n            <ModalFooter>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Alert isOpen={props.showEnterAllDataAlert} color=\"danger\">Enter all data before submitting</Alert>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Button color=\"primary\" block onClick={props.onSubmit}>Submit</Button>\n                            {props.showDeleteButton && <Button color=\"danger\" block onClick={props.onDelete}>Delete</Button>}\n                            <Button color=\"secondary\" block onClick={props.onCancel}>Cancel</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </ModalFooter>\n        </Modal>\n    )\n}\n\nexport default CustomModal","import React, { Component } from 'react'\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n    courseId: null,\n    batchName: null,\n    showAddBatchModal: false,\n    showEditBatchModal: false,\n    showEnterAllDataAlert: false,\n    notificationTitle: null,\n    notificationText: null,\n    showNotificationModal: false,\n    departmentId: null\n}\n\nclass Home extends Component {\n\n    state = { ...initialState }\n\n    componentDidMount() {\n        this.fetchCourses()\n    }\n\n    sendCollegeNotification() {\n        const { notificationText, notificationTitle } = this.state\n        if (notificationText && notificationTitle) {\n            let sendData = {\n                title: notificationTitle,\n                description: notificationText\n            }\n\n            // eslint-disable-next-line no-unused-expressions\n            this.state.departmentId ? sendData.departmentId = this.state.departmentId : null\n\n            axios.post('/notification', sendData)\n                .then(res => this.setState({ ...initialState }))\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    fetchCourses() {\n        axios.get(`/department/${this.props.auth.department}`)\n            .then(res => {\n                this.setState({ department: res.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    addBatch() {\n        if (this.state.batchName) {\n            axios.put(`/batch`, { name: this.state.batchName, course: this.state.courseId, department: this.state.department[0]._id })\n                .then(res => {\n                    this.fetchCourses()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: false })\n        }\n    }\n\n    editBatch() {\n        if (this.state.batchName && this.state.batchId) {\n            axios.post(`/batch/${this.state.batchId}`, { name: this.state.batchName })\n                .then(res => {\n                    this.fetchCourses()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    deleteBatch() {\n        if (this.state.batchId) {\n            axios.delete(`/batch/${this.state.batchId}`)\n                .then(res => {\n                    this.fetchCourses()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: false })\n        }\n    }\n\n    render() {\n        if (this.state.department && this.state.department.length > 0) {\n            return (\n                <Container style={{ marginTop: 50 }}>\n\n                    <CustomModal\n                        isOpen={this.state.showAddBatchModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"batchName\", value: this.state.batchName, placeholder: \"Batch Name\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.addBatch()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <CustomModal\n                        isOpen={this.state.showEditBatchModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"batchName\", value: this.state.batchName, placeholder: \"Batch Name\" }\n                            ]\n                        }\n                        showDeleteButton={true}\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.editBatch()}\n                        onDelete={() => this.deleteBatch()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <CustomModal\n                        isOpen={this.state.showNotificationModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"notificationTitle\", value: this.state.notificationTitle, placeholder: \"Notification Title\" },\n                                { fieldName: \"notificationText\", value: this.state.notificationText, placeholder: \"Notification Body\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.sendCollegeNotification()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    {\n                        this.state.department &&\n                        <React.Fragment>\n                            <Row>\n                                <Col>\n                                    <h2 style={{ textAlign: 'center' }}>{this.state.department[0].name}</h2>\n                                    <Button style={{ margin: 10 }} color=\"primary\" onClick={() => this.setState({ showNotificationModal: true, departmentId: this.state.department[0]._id })}>Send Department Notification</Button>\n                                </Col>\n                            </Row>\n\n                            {\n                                this.state.department && this.state.department.length > 0 &&\n                                this.state.department.map(each => {\n                                    return (\n                                        <Row key={each.courses._id} style={{ marginTop: 25, marginBottom: 25 }}>\n                                            {\n                                                each.courses.hasOwnProperty(\"name\") ?\n                                                    <Col sm=\"12\">\n                                                        <Row>\n                                                            <Col sm=\"6\">\n                                                                <h3>{each.courses.name}</h3>\n                                                            </Col>\n                                                            <Col sm=\"6\">\n                                                                <Button style={{ margin: 10 }} color=\"primary\" onClick={() => this.setState({ courseId: each.courses._id, showAddBatchModal: true })}>Add New Batch</Button>\n\n                                                            </Col>\n                                                        </Row>\n                                                    </Col>\n                                                    :\n                                                    <Col sm=\"12\">\n                                                        <h3 style={{ textAlign: 'center' }}>Create a course in Department</h3>\n                                                    </Col>\n                                            }\n\n                                            {\n                                                each.courses.batches.map(batch => {\n                                                    return (\n                                                        <Col key={batch._id} sm=\"4\">\n                                                            <Card>\n                                                                <CardBody>\n                                                                    <CardTitle>{batch.name}</CardTitle>\n                                                                    <Link style={{ margin: 10, textDecoration: 'none', color: 'white' }} to={`/batch/${batch._id}`} ><Button color=\"primary\">Details</Button></Link>\n                                                                    <Button color=\"primary\" onClick={() => this.setState({ batchId: batch._id, batchName: batch.name, showEditBatchModal: true })}>Edit</Button>\n                                                                </CardBody>\n                                                            </Card>\n                                                        </Col>\n                                                    )\n                                                })\n                                            }\n                                        </Row>\n                                    )\n                                })\n                            }\n                        </React.Fragment>\n                    }\n                </Container>\n            )\n        } else {\n            return <p>No departments found</p>\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps)(Home)","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Container, Row, Col, Collapse, Card, Table, Button } from 'reactstrap';\nimport CustomModal from '../Components/CustomModal'\nimport { Link } from 'react-router-dom'\n\nconst initialState = {\n    deptId: null,\n    departmentName: '',\n    showAddDeptForm: false,\n    showEditDeptForm: false,\n    showEnterAllDataAlert: false,\n    showAddCourseForm: false,\n    showEditCourseForm: false,\n}\n\nclass Department extends Component {\n\n    state = { departments: '', ...initialState, openTab:0 }\n\n    componentDidMount() {\n        this.fetchDepartments()\n    }\n\n    fetchDepartments() {\n        axios.get('/department')\n            .then(res => {\n                this.setState({ departments: res.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    addDept() {\n        if (this.state.departmentName) {\n            axios.put('/department', { name: this.state.departmentName })\n                .then(res => this.setState({ departments: this.state.departments.concat(res.data), ...initialState }))\n                .catch(err => {\n                    alert(\"Server error. Please try again later\")\n                    console.log(err)\n                })\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    editDept() {\n        if (this.state.departmentName) {\n            axios.post(`/department/${this.state.deptId}`, { name: this.state.departmentName })\n                .then(res => {\n                    // let itemIndex = null\n\n                    // this.state.departments.forEach((each, index) => {\n                    //     if(each._id === res.data._id) itemIndex = index \n                    // });\n                    this.fetchDepartments()\n                    this.setState({ ...initialState })\n                    // this.setState((oldState) => {\n                    //     oldState.departments[itemIndex].name = res.data.name\n                    //     return {\n                    //         departments:oldState.departments,\n                    //         ...initialState\n                    //     }\n                    // })\n                })\n                .catch(err => {\n                    alert(\"Server error. Please try again later\")\n                    console.log(err)\n                })\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    deleteDept() {\n        if (this.state.deptId) {\n            axios.delete(`/department/${this.state.deptId}`)\n                .then(res => {\n                    this.setState({\n                        departments: this.state.departments.filter(each => each._id !== res.data._id),\n                        ...initialState\n                    })\n                })\n                .catch(err => console.log(err))\n        } else {\n            alert(\"Error occurred\")\n        }\n    }\n\n    addCourse() {\n        if (this.state.deptId && this.state.courseName) {\n            axios.put('/course', { department: this.state.deptId, name: this.state.courseName })\n                .then(res => {\n                    this.fetchDepartments()\n                    this.setState({ ...initialState })\n                    // let itemIndex = null\n                    // this.state.departments.forEach((each, index) => {\n                    //     if(each._id === res.data.department) itemIndex = index \n                    // });\n\n                    // this.setState((oldState) => {\n                    //     oldState.departments[itemIndex].courses.length > 0 ? \n                    //         oldState.departments[itemIndex].courses.push(res.data)\n                    //     :\n                    //         oldState.departments[itemIndex].courses = [res.data]\n\n                    //     return { departments:oldState.departments, ...initialState }\n                    // })\n\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop:100 }}>\n\n                <CustomModal\n                    isOpen={this.state.showAddDeptForm}\n                    handleInputChange={this.handleInputChange}\n                    fields={\n                        [\n                            { fieldName: \"departmentName\", value: this.state.departmentName, placeholder: \"Department Name\" }\n                        ]\n                    }\n                    showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                    onSubmit={() => this.addDept()}\n                    onCancel={() => this.setState({ ...initialState })}\n                />\n\n                <CustomModal\n                    isOpen={this.state.showEditDeptForm}\n                    handleInputChange={this.handleInputChange}\n                    fields={\n                        [\n                            { fieldName: \"departmentName\", value: this.state.departmentName, placeholder: \"Department Name\" }\n                        ]\n                    }\n                    showDeleteButton={this.state.showEditDeptForm}\n                    onDelete={() => this.deleteDept()}\n                    showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                    onSubmit={() => this.editDept()}\n                    onCancel={() => this.setState({ ...initialState })}\n                />\n\n                <CustomModal\n                    isOpen={this.state.showAddCourseForm}\n                    handleInputChange={this.handleInputChange}\n                    fields={\n                        [\n                            { fieldName: \"courseName\", value: this.state.courseName, placeholder: \"Course Name\" }\n                        ]\n                    }\n                    showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                    onSubmit={() => this.addCourse()}\n                    onCancel={() => this.setState({ ...initialState })}\n                />\n\n\n\n                <Container>\n                    <Row>\n                        {this.state.departments && this.state.departments.length > 0 ?\n                            this.state.departments.map((each, index) => {\n                                return (\n                                    <Col key={each._id} sm=\"12\">\n\n                                        <Button\n                                            onClick={() => this.setState(this.state.openTab === index ? { openTab: -1 } : { openTab: index })}\n                                            size=\"lg\" outline color=\"primary\" block>\n                                            {each.name}\n                                        </Button>\n\n                                        <Collapse isOpen={index === this.state.openTab}>\n                                            <Card style={{ marginBottom: 20 }}>\n                                                <Row>\n                                                    <Col>\n                                                        <Button style={{ margin: 5 }} color=\"primary\" onClick={() => this.setState({ deptId: each._id, courseName: '', showAddCourseForm: true })}>Add New Course</Button>{}\n                                                        <Button color=\"primary\" onClick={() => this.setState({ deptId: each._id, departmentName: each.name, showAddDeptForm: false, showEditDeptForm: true })}>Edit</Button>\n                                                    </Col>\n                                                </Row>\n                                                <Row>\n                                                    <Col>\n                                                        <Table >\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>No</th>\n                                                                    <th>Courses</th>\n                                                                    <th>Actions</th>\n                                                                </tr>\n                                                            </thead>\n\n                                                            {\n                                                                each.courses && each.courses.length > 0 ?\n                                                                    each.courses.map((course, courseIndex) => {\n                                                                        return (\n                                                                            <tbody key={course._id}>\n                                                                                <tr>\n                                                                                    <td>{courseIndex + 1}</td>\n                                                                                    <td>{course.name}</td>\n                                                                                    <td>\n                                                                                        <Link style={{ margin: 10, textDecoration: 'none', color: 'white' }} to={`/course/${course._id}`} >\n                                                                                            <Button color=\"primary\">Details</Button>\n                                                                                        </Link>\n                                                                                        {/* <Button color=\"link\" onClick={ () => this.setState({ deptId:each._id, courseId:course._id, courseName:course.name, showEditCourseForm:true }) }>Edit</Button> */}\n                                                                                    </td>\n                                                                                </tr>\n                                                                            </tbody>\n\n                                                                        )\n                                                                    })\n                                                                    :\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <td><p style={{ textAlign: 'center' }}>No Courses. Add Some.</p></td>\n                                                                        </tr>\n                                                                    </tbody>\n\n                                                            }\n                                                        </Table>\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        </Collapse>\n                                    </Col>\n                                )\n                            })\n                            :\n                            <Col>\n                                <p style={{ textAlign: 'center' }}>No Departments Found</p>\n                            </Col>\n                        }\n                    </Row>\n\n                    <Row>\n                        <Col style={{ padding: 20 }}>\n                            <Button block color=\"primary\" onClick={() => this.setState({ showAddDeptForm: true })}>Add New Department</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Department","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Container, Row, Col, Collapse, Table, Button, Card, CardBody, CardTitle } from 'reactstrap';\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n  showEnterAllDataAlert: false,\n  showEditCourseForm: false,\n  courseName: null,\n  showAddSubjectForm: null,\n  subjectName: null,\n  subjectSemester: null,\n  showEditSubjectForm: null\n}\n\n\nclass Course extends Component {\n\n  state = { course: null, openTab: -1, ...initialState }\n\n  componentDidMount() {\n    this.fetchCourseDetails(this.props.match.params.courseId)\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  fetchCourseDetails(courseId) {\n    axios.get(`/course/${courseId}`)\n      .then(res => {\n        let course = res.data[0]\n\n        let semesterSubjectArray = {}\n\n        course.subjects.forEach(each => {\n          if (semesterSubjectArray[each.semester]) {\n            semesterSubjectArray[each.semester].push(each)\n          } else {\n            semesterSubjectArray[each.semester] = [each]\n          }\n        })\n\n        this.setState({ course, subjects: semesterSubjectArray })\n\n      })\n      .catch(err => console.log(err))\n  }\n\n  editCourse() {\n    if (this.state.courseName && this.state.courseId) {\n      axios.post(`/course/${this.state.courseId}`, { name: this.state.courseName })\n        .then(res => {\n          this.fetchCourseDetails(this.props.match.params.courseId)\n          this.setState({ ...initialState })\n          // let departmentIndex = null\n          // this.state.departments.forEach((each, index) => {\n          //   if (each._id === res.data.department) departmentIndex = index\n          // });\n\n          // let courseIndex = null\n          // this.state.departments[departmentIndex].courses.forEach((each, index) => {\n          //   if (each._id === res.data._id) courseIndex = index\n          // })\n\n          // this.setState((oldState) => {\n          //   oldState.departments[departmentIndex].courses[courseIndex].name = res.data.name\n          //   return { departments: oldState.departments, ...initialState }\n          // })\n        })\n        .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert: true })\n    }\n  }\n\n  deleteCourse() {\n    if (this.props.match.params.courseId) {\n      axios.delete(`/course/${this.props.match.params.courseId}`)\n        .then(res => {\n          this.props.history.goBack()\n\n          // let departmentIndex = null\n          // this.state.departments.forEach((each, index) => {\n          //   if (each._id === res.data.department) departmentIndex = index\n          // });\n\n          // let updatedCoursesList = this.state.departments[departmentIndex].courses.filter((each, index) => {\n          //   return each._id !== res.data._id\n          // })\n\n          // this.setState((oldState) => {\n          //   oldState.departments[departmentIndex].courses = updatedCoursesList\n          //   return { departments: oldState.departments, ...initialState }\n          // })\n\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  addSubject() {\n    const { subjectName, subjectSemester } = this.state\n    if (subjectName && subjectSemester) {\n      axios.put(`/subject`, { name: subjectName, semester: subjectSemester, course: this.props.match.params.courseId })\n        .then(res => {\n          this.fetchCourseDetails(this.props.match.params.courseId)\n          this.setState({ ...initialState })\n        })\n        .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert: true })\n    }\n  }\n\n  editSubject() {\n    const { subjectName, subjectSemester, subjectId } = this.state\n    if (subjectName && subjectSemester && subjectId) {\n      axios.post(`/subject/${subjectId}`, { name: subjectName, semester: subjectSemester })\n        .then(res => {\n          this.fetchCourseDetails(this.props.match.params.courseId)\n          this.setState({ ...initialState })\n        })\n        .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert: true })\n    }\n  }\n\n  deleteSubject() {\n    const { subjectId } = this.state\n    if (subjectId) {\n      axios.delete(`/subject/${subjectId}`)\n        .then(res => {\n          this.fetchCourseDetails(this.props.match.params.courseId)\n          this.setState({ ...initialState })\n        })\n        .catch(err => console.log(err))\n    } else {\n      this.setState({ showEnterAllDataAlert: true })\n    }\n  }\n\n  render() {\n    if (this.state.course) {\n      const { course } = this.state\n      return (\n        <>\n          <CustomModal\n            isOpen={this.state.showEditCourseForm}\n            handleInputChange={this.handleInputChange}\n            fields={\n              [\n                { fieldName: \"courseName\", value: this.state.courseName, placeholder: \"Course Name\" }\n              ]\n            }\n            showDeleteButton={this.state.showEditCourseForm}\n            showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n            onSubmit={() => this.editCourse()}\n            onDelete={() => this.deleteCourse()}\n            onCancel={() => this.setState({ ...initialState })}\n          />\n\n          <CustomModal\n            isOpen={this.state.showAddSubjectForm}\n            handleInputChange={this.handleInputChange}\n            fields={\n              [\n                { fieldName: \"subjectName\", value: this.state.subjectName, placeholder: \"Subject Name\" },\n                { fieldName: \"subjectSemester\", value: this.state.subjectSemester, placeholder: \"Semester\", type: \"number\" }\n              ]\n            }\n            showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n            onSubmit={() => this.addSubject()}\n            onCancel={() => this.setState({ ...initialState })}\n          />\n\n          <CustomModal\n            isOpen={this.state.showEditSubjectForm}\n            handleInputChange={this.handleInputChange}\n            fields={\n              [\n                { fieldName: \"subjectName\", value: this.state.subjectName, placeholder: \"Subject Name\" },\n                { fieldName: \"subjectSemester\", value: this.state.subjectSemester, placeholder: \"Semester\", type: \"number\" }\n              ]\n            }\n            showDeleteButton={this.state.showEditSubjectForm}\n            showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n            onSubmit={() => this.editSubject()}\n            onDelete={() => this.deleteSubject()}\n            onCancel={() => this.setState({ ...initialState })}\n          />\n\n          <Container>\n            <Row style={{ marginTop: 50, marginBottom: 50 }}>\n              <Col>\n                <Card>\n                  <CardBody>\n                    <Row>\n                      <Col sm=\"12\">\n                        <CardTitle>{course.name}</CardTitle>\n                      </Col>\n                    </Row>\n                    <Row style={{ margin: 10, marginTop: 20 }}>\n                      <Button style={{ margin: 10 }} onClick={() => this.setState({ subjectName: '', subjectSemester: null, showAddSubjectForm: true })} color=\"primary\">Add Subject</Button>{}\n                      <Button color=\"primary\" style={{ margin: 10 }} onClick={() => this.setState({ courseId: course._id, courseName: course.name, showEditCourseForm: true })}>Edit</Button>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n\n            <Row>\n              {\n                this.state.subjects && Object.keys(this.state.subjects).length > 0 &&\n                Object.keys(this.state.subjects).map((key, index) => {\n                  const subjects = this.state.subjects[key]\n                  return (\n                    <Col sm=\"12\" key={key}>\n                      <Button onClick={() => this.setState(this.state.openTab === index ? { openTab: -1 } : { openTab: index })}\n                        size=\"lg\" outline color=\"primary\" block>Semester : {key}</Button>\n\n                      <Collapse isOpen={this.state.openTab === index}>\n                        <Card>\n                          <Row>\n                            {\n                              subjects && subjects.length > 0 &&\n                              <Col>\n                                <Table>\n                                  <thead>\n                                    <tr>\n                                      <th>No</th>\n                                      <th>Subject Name</th>\n                                      <th>Actions</th>\n                                    </tr>\n                                  </thead>\n                                  <tbody>\n                                    {\n                                      subjects.map((each, index) => {\n                                        return (\n                                          <tr key={each._id}>\n                                            <td>{index + 1}</td>\n                                            <td>{each.name}</td>\n                                            <td>\n                                              <Button color=\"primary\" onClick={() => this.setState({ subjectName: each.name, subjectId: each._id, subjectSemester: key, showEditSubjectForm: true })}>Edit</Button>\n                                            </td>\n                                          </tr>\n                                        )\n                                      })\n                                    }\n\n                                  </tbody>\n                                </Table>\n                              </Col>\n                            }\n                          </Row>\n                        </Card>\n                      </Collapse>\n                    </Col>\n                  )\n                })\n              }\n            </Row>\n          </Container>\n        </>\n      )\n    } else {\n      return <p>Loading...</p>\n    }\n  }\n}\n\n\nexport default Course","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Container, Row, Col, Table, Button, Card, CardBody, CardText, CardTitle } from 'reactstrap';\nimport CustomModal from '../Components/CustomModal'\nimport { Link } from 'react-router-dom'\n\nconst initialState = {\n    studentName: null, mobile: null, mail: null, address: null, registerNumber: null,\n    showAddStudentForm: false,\n    showEnterAllDataAlert: false,\n    showNotificationModal: false,\n    notificationTitle: null,\n    notificationText: null\n}\n\nclass Batch extends Component {\n\n    state = { batchData: null, students: null, ...initialState }\n\n    componentDidMount() {\n        this.fetchBatchDetailsAndStudents(this.props.match.params.batchId)\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    sendBatchNotification() {\n        const { notificationText, notificationTitle } = this.state\n        if (notificationText && notificationTitle) {\n            axios.post('/notification', {\n                title: notificationTitle,\n                description: notificationText,\n                batchId: this.props.match.params.batchId\n            })\n                .then(res => this.setState({ ...initialState }))\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    fetchBatchDetailsAndStudents(batchId) {\n        axios.get(`/batch/${batchId}`)\n            .then(res => {\n                this.setState({ batchData: res.data.batchData[0], students: res.data.students })\n            })\n            .catch(err => console.log(err))\n    }\n\n    addStudent() {\n        const { studentName, mobile, mail, address, registerNumber } = this.state\n        if (studentName && mobile && mail && address && registerNumber) {\n\n            const department = this.state.batchData.department[0]._id\n            const course = this.state.batchData.course[0]._id\n            const batch = this.state.batchData._id\n\n            axios.put('/student', {\n                department, course, batch,\n                name: studentName,\n                mobile, mail, address, registerNumber\n            })\n                .then(res => {\n                    this.setState((currentState) => {\n                        currentState.students.push(res.data)\n                        return { students: currentState.students, ...initialState }\n                    })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n\n    render() {\n        if (this.state.batchData) {\n            return (\n                <>\n                    <CustomModal\n                        isOpen={this.state.showAddStudentForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"studentName\", value: this.state.studentName, placeholder: \"Student Name\" },\n                                { fieldName: \"mobile\", value: this.state.mobile, placeholder: \"Mobile\" },\n                                { fieldName: \"mail\", value: this.state.mail, placeholder: \"E-Mail\" },\n                                { fieldName: \"address\", value: this.state.address, placeholder: \"Address\" },\n                                { fieldName: \"registerNumber\", value: this.state.registerNumber, placeholder: \"Register Number\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.addStudent()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <CustomModal\n                        isOpen={this.state.showNotificationModal}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"notificationTitle\", value: this.state.notificationTitle, placeholder: \"Notification Title\" },\n                                { fieldName: \"notificationText\", value: this.state.notificationText, placeholder: \"Notification Body\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.sendBatchNotification()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <Container>\n                        <Row style={{ marginTop: 50, marginBottom: 50 }}>\n                            <Col>\n                                <Card>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"12\">\n                                                <CardTitle>Department : {this.state.batchData.department[0].name}</CardTitle>\n                                                <CardText>Course : {this.state.batchData.course[0].name}</CardText>\n                                                <CardText>Batch : {this.state.batchData.name}</CardText>\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ margin: 10, marginTop: 20 }}>\n                                            <Button color=\"primary\" style={{ margin: 10 }} onClick={() => this.setState({ showAddStudentForm: true })}>Add Student</Button>\n                                            <Button color=\"primary\" style={{ margin: 10 }} onClick={() => this.setState({ showNotificationModal: true })}>Send Batch Notification</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                {\n                                    this.state.students && this.state.students.length > 0 &&\n                                    <Table>\n                                        <thead>\n                                            <tr>\n                                                <th>No.</th>\n                                                <th>Name</th>\n                                                <th>Register Numer</th>\n                                                <th>Actions</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                this.state.students.map((each, index) => {\n                                                    return (\n                                                        <tr key={each._id}>\n                                                            <td>{index + 1}</td>\n                                                            <td>{each.name}</td>\n                                                            <td>{each.registerNumber}</td>\n                                                            <td>\n                                                                <Link to={`/student/${each._id}`} style={{ textDecoration: 'none', color: 'white' }}>\n                                                                    <Button color=\"link\">Details</Button>\n                                                                </Link>\n                                                            </td>\n                                                        </tr>\n                                                    )\n                                                })\n                                            }\n                                        </tbody>\n                                    </Table>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                </>\n            )\n        } else {\n            return (\n                <p style={{ textAlign: 'center' }}>Fetching data....</p>\n            )\n        }\n\n    }\n}\n\nexport default Batch","import React, { Component } from 'react'\nimport { Container, Row, Col, Table, Button } from 'reactstrap';\nimport axios from 'axios'\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n    showAddTeacherForm: false,\n    showEditTeacherForm: false,\n    showEnterAllDataAlert: false,\n}\nclass Teacher extends Component {\n\n    state = { teachers: [], ...initialState }\n\n    componentDidMount() {\n        this.fetchDepartments()\n        this.getTeachers()\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    fetchDepartments() {\n        axios.get('/department')\n            .then(res => { this.setState({ departments: res.data }) })\n            .catch(err => console.log(err))\n    }\n\n    getTeachers() {\n        axios.get('/teacher')\n            .then(res => {\n                this.setState({ teachers: res.data, ...initialState })\n            })\n            .catch(err => console.log(err))\n    }\n\n    addTeacher() {\n        const { teacherName, teacherEmail, teacherPassword, teacherDepartment } = this.state\n        if (teacherName && teacherEmail && teacherPassword && teacherDepartment && teacherDepartment !== '1') {\n            axios.put('/teacher', { name: teacherName, email:teacherEmail, password:teacherPassword, department: teacherDepartment })\n                .then(res => {\n                    this.getTeachers()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    editTeacher() {\n        const { teacherId, teacherName, teacherEmail, teacherDepartment } = this.state\n        if (teacherId && teacherName && teacherEmail && teacherDepartment && teacherDepartment !== '1') {\n            axios.post(`/teacher/${teacherId}`, { name: teacherName, teacherEmail:teacherEmail, department: teacherDepartment })\n                .then(res => {\n                    this.setState({ ...initialState })\n                    this.getTeachers()\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    deleteTeacher() {\n        const { teacherId } = this.state\n        if(teacherId) {\n            axios.delete(`/teacher/${teacherId}`)\n            .then(res => {\n                this.getTeachers()\n                this.setState({ ...initialState })\n            })\n        } else {\n            alert(\"Error occurred\")\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.departments\n                    &&\n                    <CustomModal\n                        isOpen={this.state.showAddTeacherForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"teacherName\", value: this.state.teacherName, placeholder: \"Name\" },\n                                { fieldName: \"teacherEmail\", value: this.state.teacherEmail, placeholder: \"Email\" },\n                                { fieldName: \"teacherPassword\", value: this.state.teacherPassword, placeholder: \"Password\", type:\"password\" },\n                            ]\n                        }\n                        selectFields={\n                            [\n                                {\n                                    data: [{ _id: '1', name: 'Select Department' }, ...this.state.departments],\n                                    fieldName: \"teacherDepartment\",\n                                    value: this.state.teacherDepartment\n                                }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.addTeacher()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n                }\n\n                {\n                    this.state.departments\n                    &&\n                    <CustomModal\n                        isOpen={this.state.showEditTeacherForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"teacherName\", value: this.state.teacherName, placeholder: \"Name\" },\n                                { fieldName: \"teacherEmail\", value: this.state.teacherEmail, placeholder: \"Email\" },\n                            ]\n                        }\n                        selectFields={\n                            [\n                                {\n                                    data: [{ _id: '1', name: 'Select Department' }, ...this.state.departments],\n                                    fieldName: \"teacherDepartment\",\n                                    value: this.state.teacherDepartment\n                                }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        showDeleteButton={this.state.showEditTeacherForm}\n                        onDelete={() => this.deleteTeacher()}\n                        onSubmit={() => this.editTeacher()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n                }\n\n                <Container>\n                    <Row>\n                        <Col style={{ padding: 20 }}>\n                            <Button color=\"primary\" onClick={() => this.setState({ showAddTeacherForm: true })}>Add New Teacher</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        {\n                            this.state.teachers && this.state.teachers.length > 0 &&\n                            <Col>\n                                <Table>\n                                    <thead>\n                                        <tr>\n                                            <th>No.</th>\n                                            <th>Name</th>\n                                            <th>Email</th>\n                                            <th>Department</th>\n                                            <th>Actions</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.teachers.map((teacher, index) => {\n                                                return (\n                                                    <tr key={teacher._id}>\n                                                        <td>{index + 1}</td>\n                                                        <td>{teacher.name}</td>\n                                                        <td>{teacher.email}</td>\n                                                        <td>{teacher.department.name}</td>\n                                                        <td>\n                                                            <Button color=\"link\" onClick={() => this.setState({ teacherName: teacher.name, teacherEmail:teacher.email, teacherDepartment: teacher.department._id, teacherId: teacher._id, showEditTeacherForm: true })}>Edit</Button>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                            </Col>\n                        }\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Teacher","import React, { Component } from 'react'\nimport { Container, Row, Col, Collapse, Table, Button } from 'reactstrap';\nimport { Card, CardText, CardBody, CardTitle } from 'reactstrap';\nimport axios from 'axios'\nimport CustomModal from '../Components/CustomModal'\n\nconst initialState = {\n    showEditStudentForm:false,\n    showEditSubjectForm: false,\n    showEnterAllDataAlert: false,\n}\n\nclass Student extends Component {\n\n    state = { openTab: 0, ...initialState }\n\n    componentDidMount() {\n        this.fetchStudentDetails(this.props.match.params.studentId)\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    fetchStudentDetails(studentId) {\n        axios.get(`/student/${studentId}`)\n            .then(res => {\n                this.fetchCourseDetails(res.data.course._id, res.data)\n                this.setState({ student: res.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    fetchCourseDetails(courseId, student) {\n        axios.get(`/course/${courseId}`)\n            .then(res => {\n\n                let course = res.data[0]\n                let semesterSubjectArray = {}\n\n                course.subjects.forEach(each => {\n                    if (semesterSubjectArray[each.semester]) {\n                        semesterSubjectArray[each.semester].push(each)\n                    } else {\n                        semesterSubjectArray[each.semester] = [each]\n                    }\n                })\n\n                this.setState({ course })\n\n                this.combineSubjectAndStudent(semesterSubjectArray, student)\n\n            })\n            .catch(err => console.log(err))\n    }\n\n    combineSubjectAndStudent(semesterSubjectArray, student) {\n\n        if (!student.subjectData) { student.subjectData = [] }\n        const { subjectData } = student\n\n        Object.keys(semesterSubjectArray).map((semNumber, index) => {\n            return semesterSubjectArray[semNumber].map((eachSubject, innerIndex) => {\n                let foundItem = subjectData.filter(each => each.subjectId === eachSubject._id)\n                if (foundItem.length > 0) {\n                    return semesterSubjectArray[semNumber][innerIndex].subjectData = foundItem[0]\n                } else {\n                    return semesterSubjectArray[semNumber][innerIndex].subjectData = {\n                        subjectId: eachSubject._id,\n                        firstInternal: null,\n                        secondInternal: null,\n                        attendacePercentage: null\n                    }\n                }\n            })\n        })\n\n        this.setState({ subjects: semesterSubjectArray })\n    }\n\n    editSubjectDetails() {\n        const { editingSubjectId, firstInternal, secondInternal, attendancePercentage } = this.state\n        if (editingSubjectId && firstInternal && secondInternal && attendancePercentage) {\n            axios.post(`/student/${this.props.match.params.studentId}/updateSubjectData`, {\n                editingSubjectId, firstInternal, secondInternal, attendancePercentage\n            })\n                .then(res => {\n                    this.fetchStudentDetails(this.props.match.params.studentId)\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    editStudentDetails() {\n        const { studentId, studentName, mobile, mail, address, registerNumber } = this.state\n        if(studentId && studentName && mobile && mail && address && registerNumber) {\n            axios.post(`/student/${studentId}`, { name:studentName, mobile, mail, address, registerNumber })\n            .then(res => {\n                this.fetchStudentDetails(this.props.match.params.studentId)\n                this.setState({ ...initialState })\n            })\n            .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert:true })\n        }\n    }\n\n    deleteStudent() {\n        const { studentId } = this.state\n        if(studentId) {\n            axios.delete(`/student/${studentId}`)\n            .then(res => {\n                this.props.history.goBack()\n                this.setState({ ...initialState })\n            })\n            .catch(err => console.log(err))\n        } else {\n            alert(\"Error occurred\")\n        }\n    }\n\n    render() {\n        const { student } = this.state\n\n        if (this.state.student) {\n            return (\n                <div>\n\n                    <CustomModal\n                        isOpen={this.state.showEditStudentForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"studentName\", value: this.state.studentName, placeholder: \"Student Name\" },\n                                { fieldName: \"mobile\", value: this.state.mobile, placeholder: \"Mobile\" },\n                                { fieldName: \"mail\", value: this.state.mail, placeholder: \"E-Mail\" },\n                                { fieldName: \"address\", value: this.state.address, placeholder: \"Address\" },\n                                { fieldName: \"registerNumber\", value: this.state.registerNumber, placeholder: \"Register Number\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.editStudentDetails()}\n                        showDeleteButton={this.state.showEditStudentForm}\n                        onDelete={() => this.deleteStudent() }\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <CustomModal\n                        isOpen={this.state.showEditSubjectForm}\n                        handleInputChange={this.handleInputChange}\n                        fields={\n                            [\n                                { fieldName: \"firstInternal\", value: this.state.firstInternal, placeholder: \"First Internal Marks\", type: \"number\" },\n                                { fieldName: \"secondInternal\", value: this.state.secondInternal, placeholder: \"Second Internal Marks\", type: \"number\" },\n                                { fieldName: \"attendancePercentage\", value: this.state.attendancePercentage, placeholder: \"Attendance Percentage\", type: \"number\" }\n                            ]\n                        }\n                        showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                        onSubmit={() => this.editSubjectDetails()}\n                        onCancel={() => this.setState({ ...initialState })}\n                    />\n\n                    <Container>\n                        <Row style={{ marginTop: 50, marginBottom: 50 }}>\n                            <Col>\n                                <Card>\n                                    <CardBody>\n                                        <Row>\n                                            <Col sm=\"6\">\n                                                <CardTitle>{student.name}</CardTitle>\n                                                <CardText>{student.registerNumber}</CardText>\n                                                <CardText>{student.course.name}</CardText>\n                                                <CardText>{student.batch.name} {student.course.name}</CardText>\n                                            </Col>\n                                            <Col sm=\"6\">\n                                                <CardText>{student.mobile}</CardText>\n                                                <CardText>{student.address}</CardText>\n                                                <CardText>{student.mail}</CardText>\n                                            </Col>\n                                        </Row>\n                                        <Row style={{ margin: 10, marginTop: 20 }}>\n                                            <Button color=\"primary\" onClick={ () => {\n                                                this.setState({\n                                                    studentId:student._id,\n                                                    studentName:student.name,\n                                                    mobile:student.mobile,\n                                                    mail:student.mail,\n                                                    address:student.address,\n                                                    registerNumber:student.registerNumber\n                                                }, () => this.setState({ showEditStudentForm:true }))\n                                            }}>Edit Detail</Button>\n                                        </Row>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            {\n                                this.state.subjects && Object.keys(this.state.subjects).length > 0 &&\n                                Object.keys(this.state.subjects).map((key, index) => {\n                                    const subjects = this.state.subjects[key]\n                                    return (\n                                        <Col sm=\"12\" key={key}>\n                                            <Button onClick={() => this.setState(this.state.openTab === index ? { openTab: -1 } : { openTab: index })}\n                                                size=\"lg\" outline color=\"primary\" block>Semester : {key}</Button>\n\n                                            <Collapse isOpen={this.state.openTab === index}>\n                                                <Card>\n                                                    <Row>\n                                                        {\n                                                            subjects && subjects.length > 0 &&\n                                                            <Col>\n                                                                <Table>\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <th>No</th>\n                                                                            <th>Subject Name</th>\n                                                                            <th>1st Internal</th>\n                                                                            <th>2nd Internal</th>\n                                                                            <th>Attendance</th>\n                                                                            <th>Actions</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {\n                                                                            subjects.map((each, index) => {\n                                                                                // console.log(each)\n                                                                                return (\n                                                                                    <tr key={each._id}>\n                                                                                        <td>{index + 1}</td>\n                                                                                        <td>{each.name}</td>\n                                                                                        <td>{each.subjectData.firstInternal || 'NA'}</td>\n                                                                                        <td>{each.subjectData.secondInternal || 'NA'}</td>\n                                                                                        <td>{each.subjectData.attendancePercentage || 'NA'}</td>\n                                                                                        <td>\n                                                                                            <Button color=\"primary\" onClick={() => this.setState({\n                                                                                                editingSubjectId: each._id,\n                                                                                                firstInternal: each.subjectData.firstInternal,\n                                                                                                secondInternal: each.subjectData.secondInternal,\n                                                                                                attendancePercentage: each.subjectData.attendancePercentage,\n                                                                                                showEditSubjectForm: true\n                                                                                            })}>Edit</Button>\n                                                                                        </td>\n                                                                                    </tr>\n                                                                                )\n                                                                            })\n                                                                        }\n\n                                                                    </tbody>\n                                                                </Table>\n                                                            </Col>\n                                                        }\n                                                    </Row>\n                                                </Card>\n                                            </Collapse>\n                                        </Col>\n                                    )\n                                })\n                            }\n                        </Row>\n                    </Container>\n                </div>\n            )\n        } else {\n            return <p>Loading</p>\n        }\n    }\n}\n\nexport default Student","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Button, Table, Container, Row, Col } from 'reactstrap';\nimport { connect } from 'react-redux'\nimport CustomModal from '../Components/CustomModal'\n\n\nconst initialState = {\n    courseId: null,\n    batchName: null,\n    showAddBatchModal: false,\n    showEditBatchModal: false,\n    showEnterAllDataAlert: false,\n    notificationTitle: null,\n    notificationText: null,\n    showNotificationModal: false,\n    departmentId: null\n}\n\nclass Notifications extends Component {\n\n    state = { notifications: [], ...initialState }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    fetchNotifications() {\n        axios.get('/notification')\n            .then(res => { this.setState({ notifications: res.data }) })\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount() {\n        this.fetchNotifications()\n    }\n\n    deleteNotification(notificationId) {\n        axios.delete(`/notification/${notificationId}`)\n        .then(res => this.fetchNotifications())\n        .catch(err => console.log(err))\n    }\n\n    sendCollegeNotification() {\n        const { notificationText, notificationTitle } = this.state\n        if (notificationText && notificationTitle) {\n            let sendData = {\n                title: notificationTitle,\n                description: notificationText\n            }\n\n            // eslint-disable-next-line no-unused-expressions\n            this.state.departmentId ? sendData.departmentId = this.state.departmentId : null\n\n            axios.post('/notification', sendData)\n                .then(res => {\n                    this.fetchNotifications()\n                    this.setState({ ...initialState })\n                })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true })\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <CustomModal\n                    isOpen={this.state.showNotificationModal}\n                    handleInputChange={this.handleInputChange}\n                    fields={\n                        [\n                            { fieldName: \"notificationTitle\", value: this.state.notificationTitle, placeholder: \"Notification Title\" },\n                            { fieldName: \"notificationText\", value: this.state.notificationText, placeholder: \"Notification Body\" }\n                        ]\n                    }\n                    showEnterAllDataAlert={this.state.showEnterAllDataAlert}\n                    onSubmit={() => this.sendCollegeNotification()}\n                    onCancel={() => this.setState({ ...initialState })}\n                />\n                \n                {this.state.notifications && this.state.notifications.length > 0 ?\n                    <Table>\n                        <thead>\n                            <tr>\n                                <th>#</th>\n                                <th>Title</th>\n                                <th>Body</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.notifications.map((each, index) => {\n                                return (\n                                    <tr key={each._id}>\n                                        <td>{index + 1}</td>\n                                        <td>{each.title}</td>\n                                        <td>{each.description}</td>\n                                        <td style={{ textAlign: 'right' }}>\n                                            <Button\n                                                onClick={() => this.deleteNotification(each._id)}\n                                                variant=\"outline-success\">Delete</Button>\n                                        </td>\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </Table>\n                    :\n                    <div style={{ marginTop: 100 }}>\n                        <p style={{ textAlign:'center' }}>No Notifications Found</p>\n                    </div>\n                }\n                {\n                    this.props.roleId === 2 &&<Button\n                        color=\"primary\"\n                        onClick={() => this.setState({ showNotificationModal: true })}>\n                        Send College Notification\n                    </Button>\n                }\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        roleId:state.auth.roleId\n    }\n}\n\nexport default connect(mapStateToProps)(Notifications)","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport Home from '../Pages/Home'\nimport Dept from '../Pages/Dept'\nimport Course from '../Pages/Course'\nimport Batch from '../Pages/Batch'\nimport Teacher from '../Pages/Teacher'\nimport Student from '../Pages/Student'\nimport Notifications from '../Pages/Notifications'\n\nconst Main = () => {\n    return(\n        <React.Fragment>\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/dept\" exact component={Dept} />\n                <Route path=\"/course/:courseId\" exact component={Course} />\n                <Route path=\"/batch/:batchId\" exact component={Batch} />\n                <Route path='/student/:studentId' exact component={Student} />\n                <Route path='/teacher' exact component={Teacher} />\n                <Route path='/notifications' exact component={Notifications} />\n            </Switch>\n        </React.Fragment>\n    )\n}\n\nexport default Main","import React, { Component } from 'react'\nimport { Container, Row, Col, Form, Button, FormGroup, Input, Alert } from 'reactstrap'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { login } from '../redux/actions'\n\nconst initialState = {\n    showEnterAllDataAlert: false\n}\n\nclass Auth extends Component {\n\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = { ...initialState, activeTab: '1', email: \"\", password: \"\" };\n    }\n\n    handleInputChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    }\n\n    handleLogin() {\n        const { email, password } = this.state\n        if (email && password) {\n            axios.post('/teacher/login', { email, password })\n                .then(res => { this.props.login(res.data) })\n                .catch(err => console.log(err))\n        } else {\n            this.setState({ showEnterAllDataAlert: true }, () => {\n                setTimeout(() => {\n                    this.setState({ showEnterAllDataAlert: false })\n                }, 3000)\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row style={{ marginTop: '30vh' }}>\n                        <Col sm={{ size: 6, offset: 3 }}>\n                            <Row>\n                                <Col sm=\"12\">\n                                    <Form>\n                                        <h3 style={{ textAlign: 'center', marginBottom: '50px' }}>Login</h3>\n                                        <FormGroup>\n                                            <Input\n                                                type=\"email\"\n                                                name=\"email\"\n                                                placeholder=\"Enter Email\"\n                                                value={this.state.email || ''}\n                                                onChange={this.handleInputChange}\n                                            />\n                                        </FormGroup>\n\n                                        <FormGroup>\n                                            <Input\n                                                type=\"password\"\n                                                name=\"password\"\n                                                placeholder=\"Enter Password\"\n                                                value={this.state.password || ''}\n                                                onChange={this.handleInputChange}\n                                            />\n                                        </FormGroup>\n\n                                        <Button color=\"primary\" block onClick={() => this.handleLogin()}>Submit</Button>\n                                    </Form>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col style={{ marginTop: '20px' }}>\n                                    <Alert isOpen={this.state.showEnterAllDataAlert} color=\"danger\">Enter all data before submitting</Alert>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default connect(null, { login })(Auth)","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Route, withRouter } from 'react-router-dom'\n\nimport Header from './Components/Header'\nimport Main from './Components/Main'\nimport Auth from './Pages/Auth'\n\nimport axios from 'axios'\nimport { URL } from './Config/env'\naxios.defaults.baseURL = URL\n\nclass App extends Component {\n  render() {\n    if (this.props.auth._id) {\n      return (\n        <React.Fragment>\n          <Header />\n          <Main />\n        </React.Fragment>\n      )\n    } else {\n      return <Route path='/' component={Auth} />\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App));\n","// export const URL = 'http://localhost:2000/api' //Local url\nexport const URL = 'http://68.183.86.29/api' //Live server user","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOGIN, LOGOUT } from '../types'\n\nconst initialState = { _id: '', name:'', department:'', roleId:'' }\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case LOGIN:\n            return { ...state, ...action.payload }\n        case LOGOUT:\n        return { ...initialState }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux'\nimport AuthReducer from './auth_reducer'\n\nexport default combineReducers({\n    auth:AuthReducer\n})","\nimport { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport rootReducer from './redux/reducers';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer)\nexport const persistor = persistStore(store)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport { store, persistor } from './store'\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </PersistGate>    \n    </Provider>\n,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}